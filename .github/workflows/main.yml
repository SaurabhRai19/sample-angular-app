# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions

name: Practice Node.js app Build and deploy to Azure Web Application - sampleangularnew

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Set up Node.js version
      uses: actions/setup-node@v1
      with:
        node-version: '12.x'

    - name: npm install, build, and test
      run: |
        npm install
        npm run build --if-present
       # npm run test --if-present

    - name: Upload artifact for deployment job
      uses: actions/upload-artifact@v2
      with:
        name: deploy_dist
        path: dist/angular-sampleapp
        
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - uses: sonarsource/sonarqube-scan-action@master
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
    # If you wish to fail your job when the Quality Gate is red, uncomment the
    # following lines. This would typically be used to fail a deployment.
    # - uses: sonarsource/sonarqube-quality-gate-action@master
    #   timeout-minutes: 5
    #   env:
    #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  
    - name: SonarQube Quality Gate check
      uses: sonarsource/sonarqube-quality-gate-action@master
      # Force to fail step after a specific time
      timeout-minutes: 5
      env:
       SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  
  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
    - name: Download artifact from build job
      uses: actions/download-artifact@v2
      with:
        name: deploy_dist

    - name: 'Deploy to Azure Web App'
      id: deploy-to-webapp
      uses: azure/webapps-deploy@v2
      with:
        app-name: 'sampleangularnew'
        slot-name: 'production'
        publish-profile: '<publishData><publishProfile profileName="sampleangularnew - Web Deploy" publishMethod="MSDeploy" publishUrl="sampleangularnew.scm.azurewebsites.net:443" msdeploySite="sampleangularnew" userName="$sampleangularnew" userPWD="DZAcx3HBnamk4y5rHb77mkktNsalfqHrAZNnoo5FqqaiNqlMN4N1tHxftYLm" destinationAppUrl="http://sampleangularnew.azurewebsites.net" SQLServerDBConnectionString="" mySQLDBConnectionString="" hostingProviderForumLink="" controlPanelLink="http://windows.azure.com" webSystem="WebSites"><databases /></publishProfile><publishProfile profileName="sampleangularnew - FTP" publishMethod="FTP" publishUrl="ftp://waws-prod-dm1-199.ftp.azurewebsites.windows.net/site/wwwroot" ftpPassiveMode="True" userName="sampleangularnew\$sampleangularnew" userPWD="DZAcx3HBnamk4y5rHb77mkktNsalfqHrAZNnoo5FqqaiNqlMN4N1tHxftYLm" destinationAppUrl="http://sampleangularnew.azurewebsites.net" SQLServerDBConnectionString="" mySQLDBConnectionString="" hostingProviderForumLink="" controlPanelLink="http://windows.azure.com" webSystem="WebSites"><databases /></publishProfile><publishProfile profileName="sampleangularnew - Zip Deploy" publishMethod="ZipDeploy" publishUrl="sampleangularnew.scm.azurewebsites.net:443" userName="$sampleangularnew" userPWD="DZAcx3HBnamk4y5rHb77mkktNsalfqHrAZNnoo5FqqaiNqlMN4N1tHxftYLm" destinationAppUrl="http://sampleangularnew.azurewebsites.net" SQLServerDBConnectionString="" mySQLDBConnectionString="" hostingProviderForumLink="" controlPanelLink="http://windows.azure.com" webSystem="WebSites"><databases /></publishProfile></publishData>'
        package: .
        
    - name: ZAP Scan
      uses: zaproxy/action-baseline@v0.4.0
      with:
        target: 'https://sampleangularnew.azurewebsites.net'
